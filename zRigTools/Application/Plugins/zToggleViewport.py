# ZooToggleViewport
# Initial code generated by XSI SDK Wizard
# Executed Tue Sep 26 15:54:00 PDT 2006 by andy
# 
# Tip: To add a command to this plug-in, right-click in the 
# script editor and choose Tools > Add Command.
# 
# Tip: To get help on a callback, highlight the callback name
# (for example, "Init", "Define", or "Execute") and press F1.
import win32com.client
from win32com.client import constants
from win32com.client import constants as c

xsi = Application
null = None
false = 0
true = 1

def XSILoadPlugin( in_reg ):
	in_reg.Author = "Andy"
	in_reg.Name = "ZooToggleViewport"
	in_reg.Email = ""
	in_reg.URL = ""
	in_reg.Major = 1
	in_reg.Minor = 0

	
	in_reg.RegisterCommand("zToggleViewportMode","zToggleViewportMode")
	#RegistrationInsertionPoint - do not remove this line

	return true

def XSIUnloadPlugin( in_reg ):
	strPluginName = in_reg.Name
	Application.LogMessage(str(strPluginName) + str(" has been unloaded."))
	return true

def ZooToggleViewportMode_Init( ctxt ):
	oCmd = ctxt.Source
	oCmd.Description = ""
	#oCmd.SetFlag(constants.siNoLogging,true)
	oCmd.ReturnValue = false

	return true

def ZooToggleViewportMode_Execute(  ):
	
	# create a property to cache the current mode #
	viewportToggleProp = xsi.ActiveSceneRoot.Properties( 'zooViewportToogle' )
	if not viewportToggleProp:
		viewportToggleProp = xsi.ActiveSceneRoot.AddProperty( 'CustomProperty', False, 'zooViewportToogle' )
		viewportToggleProp.AddParameter3('ViewportA', c.siString, 'wireframe', None, None, False, True )
		viewportToggleProp.AddParameter3('ViewportB', c.siString, 'wireframe', None, None, False, True )
		viewportToggleProp.AddParameter3('ViewportC', c.siString, 'wireframe', None, None, False, True )
		viewportToggleProp.AddParameter3('ViewportD', c.siString, 'wireframe', None, None, False, True )
		
	# get viewport under mouse #
	view = xsi.GetViewportUnderMouse()
	
	# toggle the mode #
	currentMode = viewportToggleProp.Parameters( 'Viewport%s' % view )
	
	if currentMode.Value == 'wireframe': 
		currentMode.Value = 'shaded'
		xsi.SetViewDisplayMode("shaded")
		return
		
	if currentMode.Value == 'shaded': 
		currentMode.Value = 'wireframe'
		xsi.SetViewDisplayMode("wireframe")
		return
		
